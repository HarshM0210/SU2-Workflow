name: SU2 Simulation

on:
  push:
    paths:
      - "**.py"
      - "**.cfg"
      - "**.su2"
      - "**.dat"
  workflow_dispatch:

jobs:
  su2-run:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            cmake \
            ninja-build \
            libopenmpi-dev \
            openmpi-bin \
            swig \
            libboost-all-dev \
            libmetis-dev \
            libparmetis-dev \
            libhdf5-dev \
            zlib1g-dev \
            python3-dev \
            python3-pip \
            git \
            wget \
            libgl1

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy matplotlib pyvista pandas

      - name: Clone and Build SU2 (without MPI)
        run: |
          git clone https://github.com/su2code/SU2.git
          cd SU2
          git checkout -b develop origin/develop
          python meson.py build \
            -Dwith-mpi=disabled \
            -Denable-pywrapper=true \
            --prefix=/usr/local
          ninja -C build
          sudo ninja -C build install
          sudo ldconfig
          echo "SU2_CFD path: $(which SU2_CFD)"

      - name: Set up environment variables
        run: |
          echo "LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "PATH=/usr/local/bin:$PATH" >> $GITHUB_ENV

      - name: Verify files exist
        run: |
          ls -la
          [ -f "exp_data.dat" ] || { echo "Error: exp_data.dat not found"; exit 1; }
          [ -f "config_sa.cfg" ] || { echo "Error: config_sa.cfg not found"; exit 1; }
          [ -f "047.su2" ] || { echo "Error: 047.su2 not found"; exit 1; }

      - name: Run automation.py
        run: |
          python automation.py

      - name: Push results to Results repo
        if: always()
        run: |
          BUILD_ID=${{ github.run_id }}
          BRANCH_NAME=results-${BUILD_ID}
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")

          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          mkdir result-tmp
          cp -r *.csv *.png *.vtu *.dat *.out *.txt plots result-tmp || true

          # Create README for the results branch
          echo "# Results from Build ${BUILD_ID}" > result-tmp/README.md
          echo "**Run Timestamp:** ${TIMESTAMP}" >> result-tmp/README.md
          echo "**Source Workflow:** [${{ github.repository }}@${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> result-tmp/README.md
          echo -e "\n## Files included:" >> result-tmp/README.md
          ls -1 result-tmp | grep -v README.md | sed 's/^/- /' >> result-tmp/README.md

          cd result-tmp
          git init
          git checkout -b $BRANCH_NAME
          git remote add origin https://x-access-token:${{ secrets.RESULTS_REPO_TOKEN }}@github.com/HarshM0210/Results.git
          git add .
          git commit -m "Add results from build $BUILD_ID - $TIMESTAMP"
          git push origin $BRANCH_NAME

      - name: Upload results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: su2-results-${{ github.run_id }}
          path: |
            *.csv
            *.dat
            *.png
            *.vtu
            *.txt
            *.out
            plots/
          retention-days: 7

      - name: Send email notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GMAIL_ADDRESS }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: "SU2 Simulation Results - Build ${{ github.run_id }}"
          to: harshvijayrbl@gmail.com
          from: SU2 Automation
          html_body: |
            <h3>SU2 Simulation Completed</h3>
            <p><b>Status:</b> ${{ job.status }}</p>
            <p><b>Build ID:</b> ${{ github.run_id }}</p>
            <p><b>Commit:</b> <a href="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}">${{ github.sha }}</a></p>
            <p>The results have been pushed to <code>HarshM0210/Results</code> in branch <code>results-${{ github.run_id }}</code>.</p>
            <p>You can view the workflow run <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">here</a>.</p>
            ${{ contains(job.status, 'failure') && '<p style="color:red;"><b>Note:</b> The workflow completed with failures.</p>' || '' }
